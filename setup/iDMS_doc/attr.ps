%!
%%BeginFeature: *Duplex True
true statusdict /setduplexmode get exec false statusdict /settumble get exec
%%EndFeature
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 9 FMDOCUMENT
0 0 /Helvetica-Oblique FMFONTDEFINE
1 0 /Helvetica-Bold FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Times-Italic FMFONTDEFINE
4 0 /Times-Bold FMFONTDEFINE
5 0 /Courier FMFONTDEFINE
6 1 /ZapfDingbats FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "49" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(Using the Attribute Procedural Interface in iDMS) 327.26 749.33 T
72 32.76 540 42.7 R
7 X
V
0 X
(Intel Confidential) 72 36.03 T
(4-49) 520 36.03 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
72 693 540 702 C
72 693 540 702 R
7 X
0 K
V
72 697.97 578.95 703.94 R
0 X
V
0.5 H
0 Z
N
0 0 612 792 C
1 18 Q
0 X
0 K
(Using the Attribute Procedural Interface in iDMS) 98.13 708 T
1 36 Q
( 4) 509.98 708 T
2 12 Q
0.12 (An attribute is a DM provided mechanism for storing state information. Each) 126 635 S
0.12 (attribute is associated with an object, and together the values of all attributes and of) 126 621 S
-0.07 0.12 (all objects in the database form the state of the database. An example of an attribute) 126 607 B
-0.74 0.12 (on an object is the) 126 593 B
3 F
-0.74 0.12 (timestamp) 214.98 593 B
2 F
-0.74 0.12 (attribute, which gives the time that the associated object) 267.75 593 B
-0.92 0.12 (was last checked into the database. The attribute procedural interface \050PI\051, is an iDMS) 126 579 B
0.12 (provided procedural interface providing applications with the ability to set, get and) 126 565 S
-0.08 0.12 (delete attributes. In this chapter) 126 551 B
-0.08 0.12 (, the attribute PI is described in detail from the point) 280.18 551 B
-0.77 0.12 (of view of applications written in C, Mainsail, and Skill. The application programmer) 126 537 B
0.12 (is cautioned that the SKILL and C interfaces are case-sensitive, while the Mainsail) 126 523 S
0.12 (interface is not. This restriction is not imposed by the feature/limitation of the) 126 509 S
0.12 (programming language. Also, any other limitations on the maximum length of) 126 495 S
0.12 (strings, maximum integer value, etc. are imposed by the language/operating system) 126 481 S
0.12 (and hardware, the attribute PI does not impose or provide and further restriction/) 126 467 S
0.12 (limitation.) 126 453 S
-0.27 0.12 (The actual code to implement the attribute PI functionality is written in C. The same) 126 427 B
0.12 (is available in Mainsail by the use of Mainsail to C Foreign Language Interface. In) 126 413 S
0.12 (SKILL the same functionality is provided by means of an) 126 399 S
3 F
0.12 (idmSlave) 411.86 399 S
2 F
0.12 ( process that is) 456.79 399 S
0.12 (spawned of) 126 385 S
0.12 (f with Opus and performs the processing using an inter) 181.94 385 S
0.12 (-process) 451.66 385 S
0.12 (communication channel. The interested reader is referred to the iDMS) 126 371 S
0.12 (Administrator) 126 357 S
0.12 (\325) 195.3 357 S
0.12 (s guide for more details about this process.) 198.75 357 S
-0.66 0.12 (For the attribute PI to work smoothly) 126 331 B
-0.66 0.12 (, it is recommended that in the run-environment,) 304.25 331 B
0.12 (the environment variable) 126 317 S
4 F
0.12 (CDS_INST) 251.91 317 S
0.12 (ALL_DIR) 309.95 317 S
2 F
0.12 ( be set to point to the Cadence) 363.43 317 S
0.12 (hierarchy) 126 303 S
0.12 (. This environment variable is used by the Cadence interface to de\336ne the) 171.59 303 S
0.12 (tech\336les and when creating shadow libraries for tracking UNIX metadata. More on) 126 289 S
0.12 (UNIX metadata is explained in the last section of this chapter) 126 275 S
0.12 (.) 427.9 275 S
1 14 Q
(4.1  Integrating a C T) 72 245.67 T
(ool) 208.59 245.67 T
2 12 Q
0.12 (In order for a tool to use the attribute PI, it must include the \336les \322fwidms.h\323 and) 126 217 S
0.12 (\322attr) 126 203 S
0.12 (.h\323, in the appropriate source \336le. The available attribute PI calls and a brief) 147.25 203 S
0.12 (explanation of each are as follows:) 126 189 S
FMENDPAGE
%%EndPage: "49" 2
%%Page: "50" 2
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(iDMS integration guide) 72 749.33 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
72 32.76 540 42.7 R
7 X
V
0 X
(4-50) 72 36.03 T
(Intel Confidential) 465.56 36.03 T
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
2 12 Q
0 X
0.12 (1.) 144 712 S
0.12 (T) 162 712 S
0.12 (o set an attribute:) 168.61 712 S
5 10 Q
0.1 (int) 144 687.33 S
0.1 (dmsCSetAttribute\050libName,cellName,viewName,versionName,) 144 663.33 S
0.1 (attrName,attrType,attrValue\051) 144 639.33 S
0.1 (char *libName, *cellName, *viewName;) 144 615.33 S
0.1 (char *versionName, *attrName, *attrType, *attrValue;) 144 591.33 S
2 12 Q
-0.65 0.12 (This call will cause an attribute to be set on a speci\336ed object in the library) 126 566 B
-0.65 0.12 (. An object) 484.42 566 B
0.12 (can be a library) 126 552 S
0.12 (, cell, view or cellview) 201.4 552 S
0.12 (. This procedure can be used to create new) 312.75 552 S
0.12 (attributes, as well as modify existing ones.) 126 538 S
3 F
0.12 (libName) 126 512 S
2 F
0.12 (: The library can be speci\336ed in two ways - either directly in case the) 167.49 512 S
0.12 (application does know the library) 126 498 S
0.12 (, or else the application can set it to NULL, in this) 289.73 498 S
-0.6 0.12 (case the iDMS, will look through the dms.pth \336le, and write the attribute into the \336rst) 126 484 B
0.12 (matching object on the read/write\050R) 126 470 S
0.12 (W\051 path. If the application desires to put an) 302.75 470 S
-0.24 0.12 (attribute only on the library) 126 456 B
-0.24 0.12 (, then the library name must be speci\336ed and the cell and) 259.66 456 B
0.12 (view name can be NULL.) 126 442 S
3 F
0.12 (cellName) 126 416 S
2 F
0.12 (: The cellName must be speci\336ed unless the application is setting the) 172.26 416 S
-0.3 0.12 (attribute on a library or a view) 126 402 B
-0.3 0.12 (. If the application desires to set the attribute on a cell,) 273.14 402 B
0.12 (then the cell needs to be speci\336ed.) 126 388 S
3 F
0.12 (viewName) 126 362 S
2 F
0.12 (: The viewName must be speci\336ed unless the application is setting the) 176.92 362 S
-0.26 0.12 (attribute on a cell or a library) 126 348 B
-0.26 0.12 (. If the application desires to set the attribute on a view) 267.41 348 B
-0.26 0.12 (,) 534.02 348 B
0.12 (then the libName is optional as in the above case.) 126 334 S
3 F
-0.34 0.12 (versionName:) 126 308 B
2 F
-0.34 0.12 ( The versionName is optional - if it is set to NULL the latest version is) 194.72 308 B
0.12 (used by iDMS.) 126 294 S
3 F
0.12 (attrName:) 126 268 S
2 F
0.12 ( The attribute name is compulsory always. It can be any alphanumeric) 176.38 268 S
0.12 (string. If the application desires to set an hierarchical attribute, then the name is) 126 254 S
-0.09 0.12 (overloaded with the parentAttribute/attributeName. E.g: if cvs desires to set the sub-) 126 240 B
-0.78 0.12 (attribute DRC, of an hierarchical attribute called CVS, then the name would be \322CVS/) 126 226 B
-0.15 0.12 (DRC\323. However if a tool wanted to simply set an attribute called foo, then the name) 126 212 B
0.12 (would just be \322foo\323.) 126 198 S
3 F
-0.16 0.12 (attrT) 126 172 B
-0.16 0.12 (ype:) 149.71 172 B
2 F
-0.16 0.12 ( The attribute type can be any of the following types: string, boolean, time,) 170.83 172 B
0.12 (integer) 126 158 S
0.12 (, \337oat, list. It is a compulsory \336eld.) 159.66 158 S
3 F
0.12 (attrV) 126 132 S
0.12 (alue:) 149.93 132 S
2 F
0.12 ( value of the attribute is to be fed in as a string. Depending on the type) 181.41 132 S
0.12 (parameter) 126 118 S
0.12 (, iDMS will appropriately decipher the string. If the value of this \336eld is) 174.55 118 S
0.12 (NULL, then iDMS will place an appropriate NULL value on the attribute created.) 126 104 S
FMENDPAGE
%%EndPage: "50" 3
%%Page: "51" 3
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(Using the Attribute Procedural Interface in iDMS) 327.26 749.33 T
72 32.76 540 42.7 R
7 X
V
0 X
(Intel Confidential) 72 36.03 T
(4-51) 520 36.03 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
2 12 Q
0 X
0.12 (Some typical calls would look like:) 126 712 S
5.26 (if \050\050err = dmsCSetAttribute\050NULL, myCell, myView, NULL, \322dls/devCount\323,) 126 686 P
(\322int\323,\323100\323\051\051 != idmsSuccess\051 { ...}) 162 672 T
0.43 (if \050\050err = dmsCSetAttribute\050myLib, myCell, myView, myVer, \322foo\323, \322boolean\323, \322t\323\051\051) 126 658 P
(!= idmsSuccess\051 {...}) 162 644 T
0.12 (The NULL values set by idms are -1, and 1.0 for integer and \337oat types. False for) 126 618 S
0.12 (boolean and \322iDMSNull\323 for a string type.) 126 604 S
0.12 (2.) 144 552 S
0.12 (T) 162 552 S
0.12 (o set a list of attributes) 168.61 552 S
5 10 Q
0.1 (int) 144 527.33 S
0.1 (dmsCSetAttributeList\050libNameList,cellNameList,viewNameList,) 144 503.33 S
0.1 (versionNameList,attrNameList,attrTypeList,attrValueList\051) 144 479.33 S
0.1 (char *libNameList,*cellNameList,*viewNameList;) 144 455.33 S
0.1 ( char *versionNameList,*attrNameList,*attrTypeList;) 144 431.33 S
0.1 (char *attrValueList;) 144 407.33 S
2 12 Q
-0.47 0.12 (This procedure is intended for use by application that set a lar) 126 382 B
-0.47 0.12 (ge number of attributes) 424.41 382 B
-0.38 0.12 (at a time. This procedure can be used in several \337avors, and the reader is encouraged) 126 368 B
-0.01 0.12 (to read this carefully) 126 354 B
-0.01 0.12 (. This procedure can be used to set several attributes on several) 226.76 354 B
0.12 (objects, several attributes on one object, or one attribute on several objects.) 126 340 S
3 F
0.12 (libNameList:) 126 314 S
2 F
0.12 ( As described in the above section, this \336eld is optional and can be) 190.08 314 S
-0.09 0.12 (NULL, in which case the library is searched from the dms.pth. If this is non-NULL,) 126 300 B
-0.09 0.12 (then the number of elements in the list must be exactly 1 or exactly n. If the number) 126 286 B
-0.05 0.12 (of elements is 1, then this library will be used in combination with each of the other) 126 272 B
0.12 (ar) 126 258 S
0.12 (guments to set attributes, if the number of elements is n, then a every set call will) 135.34 258 S
0.12 (use a dif) 126 244 S
0.12 (ferent library name.) 167.5 244 S
3 F
0.12 (cellNameList, viewNameList, versionNameList,) 126 218 S
0.12 (attrNameList,) 361.95 218 S
0.12 (attrT) 432.93 218 S
0.12 (ypeList,) 456.65 218 S
-0.72 0.12 (attrV) 126 204 B
-0.72 0.12 (alueList:) 149.93 204 B
2 F
-0.72 0.12 ( These, too, can be either NULL or a list of 1 or n elements. If cellName) 193.65 204 B
0.12 (is NULL, then the attribute\050s\051 are set on the library or view) 126 190 S
0.12 (. If viewName is NULL,) 416.32 190 S
-0.02 0.12 (then they are being set on library or cell. The NULL versionName implies that only) 126 176 B
-0.51 0.12 (the latest versions will be considered. The attribute name or type cannot be NULL. If) 126 162 B
0.12 (attribute value is NULL, every attribute set will have the pre-de\336ned null value set) 126 148 S
-0.8 0.12 (by iDMS. If any of the ar) 126 134 B
-0.8 0.12 (guments is a list of 1 element, then that element will be taken) 245.57 134 B
0.12 (as a vector with each of the n others. E.g: dmsCSetAttributeList\050NULL, a:b, alf,) 126 120 S
0.12 (NULL, attr1:attr2, string:integer) 126 106 S
0.12 (, hello:12\051 is a call that is identical to two calls to) 284.71 106 S
62.02 682 66.02 694 R
V
62.02 640 66.02 666 R
V
FMENDPAGE
%%EndPage: "51" 4
%%Page: "52" 4
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(iDMS integration guide) 72 749.33 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
72 32.76 540 42.7 R
7 X
V
0 X
(4-52) 72 36.03 T
(Intel Confidential) 465.56 36.03 T
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
2 12 Q
0 X
0.12 (dmsCSetAttribute namely dmsCSetAttribute\050NULL, a, alf, NULL, attr1, str) 126 712 S
0.12 (, hello\051) 498.48 712 S
0.12 (and dmsCSetAttribute\050NULL, b, alf, NULL, attr2, int, 12\051. In this example n is 2.) 126 698 S
0.12 (E.g: Some legal calls are:) 126 672 S
5 10 Q
0.1 (dmsCSetAttributeList\050NULL, myCell,) 144 647.33 S
0.1 (myView,NULL,\322attr1:attr2:attr3/foo\323, \322string\323,NULL\051;) 144 635.33 S
0.1 (dmsCSetAttributeList\050myLib,\323cell1:cell2:cell3\323,\323alf\323,\323attr1\323,\323in) 144 611.33 S
0.1 (t\323,\32310\323\051;) 144 599.33 S
2 12 Q
0.12 (3.) 144 574 S
0.12 (T) 162 574 S
0.12 (o get an attribute:) 168.61 574 S
5 10 Q
0.1 (int) 144 549.33 S
0.1 (dmsCGetAttribute\050libName,cellName,viewName,versionName,) 144 525.33 S
0.1 (attrName,attrType,attrValue\051) 144 501.33 S
0.1 (char *libName,*cellName,*viewName,*versionName;) 144 477.33 S
0.1 (char *attrName,**attrType,**attrValue;) 144 453.33 S
2 12 Q
0.12 (This procedure\325) 126 428 S
0.12 (s ar) 203.4 428 S
0.12 (guments are identical to those in dmsCSetAttribute in the) 220.65 428 S
0.12 (libName, cellName, viewname, versionName and attrName \336elds.) 126 414 S
0.12 (attrT) 126 388 S
0.12 (ype, attrV) 149.07 388 S
0.12 (alue: These parameters should be declared and used as pointers.E.g:) 196.9 388 S
-0.31 0.12 (char *aT) 126 374 B
-0.31 0.12 (ype, *aV) 168.1 374 B
-0.31 0.12 (al; .... dmsCGetAttribute\050lib, cell, view) 210.72 374 B
-0.31 0.12 (, ver) 401.51 374 B
-0.31 0.12 (, attr) 422.64 374 B
-0.31 0.12 (, &aT) 444.55 374 B
-0.31 0.12 (ype, &aV) 471.99 374 B
-0.31 0.12 (al\051..) 517.94 374 B
-0.36 0.12 (If the application desires to retain these values, they must be copied. The integrity of) 126 360 B
0.12 (these values is guaranteed only until the next call to get an attribute value.) 126 346 S
0.12 (4.) 144 320 S
0.12 (T) 162 320 S
0.12 (o get all attributes on an object:) 168.61 320 S
5 10 Q
0.1 (int) 144 295.33 S
0.1 (dmsCGetAllAttributes\050libName,cellName,viewName,versionName,) 144 271.33 S
0.1 (attrNameList,attrTypeList,attrValueList\051) 144 247.33 S
0.1 (char *libName,*cellName,*viewName,*versionName;) 144 223.33 S
0.1 (char **attrNameList,**attrTypeList, **attrValueList;) 144 199.33 S
2 12 Q
-0.88 0.12 (The ar) 126 174 B
-0.88 0.12 (guments that this procedure takes are similar to the above. In this case however) 156.59 174 B
-0.88 0.12 (,) 534.64 174 B
-0.5 0.12 (all the attribute types, and value are returned in a colon delimited list. These two lists) 126 160 B
0.12 (will have the same number of elements in them.) 126 146 S
0.12 (E.g: A code section in a typical application might look like:) 126 120 S
0.12 (char *myV) 126 94 S
0.12 (al, *val, *type;) 179.37 94 S
FMENDPAGE
%%EndPage: "52" 5
%%Page: "53" 5
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(Using the Attribute Procedural Interface in iDMS) 327.26 749.33 T
72 32.76 540 42.7 R
7 X
V
0 X
(Intel Confidential) 72 36.03 T
(4-53) 520 36.03 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
5 F
0 X
0.1 (if \050dmsCGetAttribute\050NULL, myCell, myView, NULL, myAttr, &type,) 144 713.33 S
-0.03 0.1 (&val\051 == IDMS_SUCCESS\051 { myVal = \050char *\051 malloc\050strlen\050val\051+1\051;) 144 701.33 B
0.1 (strcpy\050myVal,val\051;}) 144 689.33 S
2 12 Q
0.12 (5.) 144 664 S
0.12 (T) 162 664 S
0.12 (o delete an attribute:) 168.61 664 S
5 10 Q
0.1 (int) 144 639.33 S
0.1 (dmsCDeleteAttribute\050libName,cellName,viewName,versionName,) 144 615.33 S
0.1 (attrName\051) 144 591.33 S
0.1 (char *libName,*cellName,*viewName,*versionName,*attrName;) 144 567.33 S
2 12 Q
-0.54 0.12 (This procedure will cause deletion of the attribute. The ar) 126 542 B
-0.54 0.12 (guments are as described in) 403.78 542 B
0.12 (the set and get procedures.) 126 528 S
1 14 Q
(4.2  Integrating a Mainsail T) 72 498.67 T
(ool) 253.7 498.67 T
2 12 Q
-0.1 0.12 (In order to use the Mainsail attribute PI, the application must source the fwidms.hdr) 126 470 B
-0.37 0.12 (\336le, as well as link in the idms.olb and idms.ilb into their boot \336le. These procedures) 126 456 B
0.12 (actually simply package the ar) 126 442 S
0.12 (guments so that C can understand the strings, disable) 275.27 442 S
-0.73 0.12 (garbage collection, and then make a call through the Mainsail -> C Foreign Language) 126 428 B
-0.51 0.12 (Interface. Therefore, in this section, we do not provide an exhaustive description, the) 126 414 B
-0.05 0.12 (description for the equivalent C functions are applicable here as well. Since passing) 126 400 B
0.12 (a NULL string is not intuitive in Mainsail, the attribute PI will accept a \322#\323 as a) 126 386 S
0.12 (symbol signifying the NULL string.) 126 372 S
0.12 (1.) 144 346 S
0.12 (T) 162 346 S
0.12 (o set an attribute:) 168.61 346 S
5 10 Q
0.1 (LONG INTEGER) 144 321.33 S
0.1 (PROCEDURE dmsMslSetAttribute\050) 144 297.33 S
0.1 (USES STRING libName;) 144 273.33 S
0.1 (USES STRING cellName;) 144 249.33 S
0.1 (USES STRING viewName;) 144 225.33 S
0.1 (USES STRING versionName;) 144 201.33 S
0.1 (USES STRING attrName;) 144 177.33 S
0.1 (USES STRING attrType;) 144 153.33 S
0.1 (USES STRING attrValue;) 144 129.33 S
0.1 ( \051;) 144 105.33 S
FMENDPAGE
%%EndPage: "53" 6
%%Page: "54" 6
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(iDMS integration guide) 72 749.33 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
72 32.76 540 42.7 R
7 X
V
0 X
(4-54) 72 36.03 T
(Intel Confidential) 465.56 36.03 T
540 54 72 54 2 L
7 X
V
0 X
N
72 72 540 720 R
7 X
V
2 12 Q
0 X
0.12 (The description for these ar) 126 712 S
0.12 (guments is identical to those for the equivalent C) 261.03 712 S
0.12 (procedure.) 126 698 S
0.12 (2.) 144 672 S
0.12 (T) 162 672 S
0.12 (o set a list of attributes:) 168.61 672 S
5 10 Q
0.1 (LONG INTEGER) 144 647.33 S
0.1 (PROCEDURE dmsMslSetAttributeList\050) 144 623.33 S
0.1 ( USES STRING libNameList;) 144 599.33 S
0.1 ( USES STRING cellNameList;) 144 575.33 S
0.1 ( USES STRING viewNameList;) 144 551.33 S
0.1 ( USES STRING versionNameList;) 144 527.33 S
0.1 ( USES STRING attrNameList;) 144 503.33 S
0.1 ( USES STRING attrTypeList;) 144 479.33 S
0.1 ( USES STRING attrValueList;) 144 455.33 S
0.1 ( \051;) 144 431.33 S
2 12 Q
0.12 (The description for these ar) 126 406 S
0.12 (guments is identical to those for the equivalent C) 261.03 406 S
0.12 (procedure.) 126 392 S
0.12 (3.) 144 366 S
0.12 (T) 162 366 S
0.12 (o get an attribute:) 168.61 366 S
5 10 Q
0.1 (LONG INTEGER) 144 341.33 S
0.1 (PROCEDURE dmsMslGetAttribute\050) 144 317.33 S
0.1 (USES STRING libName;) 144 293.33 S
0.1 (USES STRING cellName;) 144 269.33 S
0.1 (USES STRING viewName;) 144 245.33 S
0.1 (USES STRING versionName;) 144 221.33 S
0.1 (USES STRING attrName;) 144 197.33 S
0.1 (PRODUCES STRING attrType;) 144 173.33 S
0.1 (PRODUCES STRING attrValue;) 144 149.33 S
0.1 ( \051;) 144 125.33 S
2 12 Q
0.12 (The description for these ar) 126 100 S
0.12 (guments is identical to those for the equivalent C) 261.03 100 S
0.12 (procedure.) 126 86 S
FMENDPAGE
%%EndPage: "54" 7
%%Page: "55" 7
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(Using the Attribute Procedural Interface in iDMS) 327.26 749.33 T
72 32.76 540 42.7 R
7 X
V
0 X
(Intel Confidential) 72 36.03 T
(4-55) 520 36.03 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
2 12 Q
0 X
0.12 (4.) 144 712 S
0.12 (T) 162 712 S
0.12 (o get all attributes on an object:) 168.61 712 S
5 10 Q
0.1 (LONG INTEGER) 144 687.33 S
0.1 (PROCEDURE dmsMslGetAllAttributes\050) 144 663.33 S
0.1 (USES STRING libName;) 144 639.33 S
0.1 (USES STRING cellName;) 144 615.33 S
0.1 (USES STRING viewName;) 180 591.33 S
0.1 (USES STRING versionName;) 180 567.33 S
0.1 (PRODUCES STRING attrNameList;) 180 543.33 S
0.1 (PRODUCES STRING attrTypeList;) 180 519.33 S
0.1 (PRODUCES STRING attrValueList;) 180 495.33 S
0.1 (\051;) 180 471.33 S
2 12 Q
0.12 (The description for these ar) 126 446 S
0.12 (guments is identical to those for the equivalent C) 261.03 446 S
0.12 (procedure.) 126 432 S
0.12 (5.) 144 406 S
0.12 (T) 162 406 S
0.12 (o delete an attribute:) 168.61 406 S
5 10 Q
0.1 (LONG INTEGER) 144 381.33 S
0.1 (PROCEDURE dmsMslDeleteAttribute\050) 144 357.33 S
0.1 ( USES STRING libName;) 144 333.33 S
0.1 ( USES STRING cellName;) 144 309.33 S
0.1 ( USES STRING viewName;) 144 285.33 S
0.1 ( USES STRING versionName;) 144 261.33 S
0.1 ( USES STRING attrName;) 144 237.33 S
0.1 ( \051;) 144 213.33 S
2 12 Q
0.12 (The description for these ar) 126 188 S
0.12 (guments is identical to those for the equivalent C) 261.03 188 S
0.12 (procedure.) 126 174 S
FMENDPAGE
%%EndPage: "55" 8
%%Page: "56" 8
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(iDMS integration guide) 72 749.33 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
72 32.76 540 42.7 R
7 X
V
0 X
(4-56) 72 36.03 T
(Intel Confidential) 465.56 36.03 T
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
1 14 Q
0 X
(4.3  Integrating a SKILL T) 72 710.67 T
(ool) 238.91 710.67 T
2 12 Q
0.12 (In the SKILL environment, the description of the ar) 126 682 S
0.12 (guments is as followed by the) 380.06 682 S
-0.57 0.12 (Opus documentation. This document assumes that the reader is familiar with SKILL.) 126 668 B
-0.26 0.12 (In addition, it is also assumed that the tool will be running on Opus. If the tool is not) 126 654 B
-0.43 0.12 (running on Opus, this interface will NOT work and the application should use one of) 126 640 B
0.12 (the above two procedural interfaces.) 126 626 S
-0.34 0.12 (Another very important assumption is that the tool which uses this interface is run in) 126 600 B
-0.17 0.12 (Opus ONL) 126 586 B
-0.17 0.12 (Y AFTER the SKILL context fwidms.il has been loaded. If this is not the) 178.56 586 B
-0.5 0.12 (case, the application will not see the de\336nition of all the procedure described here. In) 126 572 B
-0.24 0.12 (order to check if the idmSlave process is alive and running the application can make) 126 558 B
-0.14 0.12 (a call) 126 544 B
3 F
-0.14 0.12 (idmsSkillSlaveIsAlive.) 155.19 544 B
2 F
-0.14 0.12 (If this returns a t, then its ok to proceed. Otherwise, the) 267.06 544 B
-0.42 0.12 (slave is either unde\336ned or does not exist, and the application should inform the user) 126 530 B
-0.18 0.12 (of that. W) 126 516 B
-0.18 0.12 (e do not advise the application to attempt a re-start of the slave process, as) 174.18 516 B
0.12 (instantiation of multiple slaves can have several performance implications.) 126 502 S
0.12 (In the procedures that follow) 126 476 S
0.12 (, all the ar) 267.26 476 S
0.12 (guments are as described for the C interface,) 316.44 476 S
0.12 (except that instead of NULL list, a nil should be used. Also, to pass a NULL string) 126 462 S
0.12 (for either the cellName or the viewName ar) 126 448 S
0.12 (guments, the user should use an empty) 339.64 448 S
-0.39 0.12 (string \050\322\322\051 . For details on the SKILL interface, the reader should read the chapter on) 126 434 B
0.12 (the iDMS SKILL interface.) 126 420 S
0.12 (1.) 144 394 S
0.12 (T) 162 394 S
0.12 (o set an attribute:) 168.61 394 S
5 10 Q
0.1 (dmsSkillSetAttribute\050) 144 369.33 S
0.1 (t_libName/nil) 144 345.33 S
0.1 (t_cellName) 144 321.33 S
0.1 (t_viewName) 144 297.33 S
0.1 (t_versionName/nil) 144 273.33 S
0.1 (t_attrName) 144 249.33 S
0.1 (t_attrType) 144 225.33 S
0.1 (t_attrValue) 144 201.33 S
0.1 ([t_toolName]) 144 177.33 S
0.1 (\051 => t/nil) 144 153.33 S
FMENDPAGE
%%EndPage: "56" 9
%%Page: "57" 9
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(Using the Attribute Procedural Interface in iDMS) 327.26 749.33 T
72 32.76 540 42.7 R
7 X
V
0 X
(Intel Confidential) 72 36.03 T
(4-57) 520 36.03 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
2 12 Q
0 X
0.12 (2.) 144 712 S
0.12 (T) 162 712 S
0.12 (o get an attribute:) 168.61 712 S
5 10 Q
0.1 (dmsSkillGetAttribute\050) 144 687.33 S
0.1 (t_libName/nil) 144 663.33 S
0.1 (t_cellName) 144 639.33 S
0.1 (t_viewName) 144 615.33 S
0.1 (t_versionName/nil) 144 591.33 S
0.1 (t_attrName) 144 567.33 S
0.1 ([t_toolName]) 144 543.33 S
0.1 (\051 => \050t_attrType t_attrValue\051/nil) 144 519.33 S
2 12 Q
0.12 (3.) 144 470 S
0.12 (T) 162 470 S
0.12 (o delete an attribute:) 168.61 470 S
5 10 Q
0.1 (dmsSkillDeleteAttribute\050) 144 445.33 S
0.1 (t_libName/nil) 144 421.33 S
0.1 (t_cellName) 144 397.33 S
0.1 (t_viewName) 144 373.33 S
0.1 (t_versionName/nil) 144 349.33 S
0.1 (t_attrName) 144 325.33 S
0.1 ([t_toolName]) 144 301.33 S
0.1 (\051 => t/nil) 144 277.33 S
1 14 Q
(4.4  Unix meta-data) 72 248.67 T
2 12 Q
0.12 (There are three dif) 126 220 S
0.12 (ferent places an attribute can reside based on the design data \336le.) 216.97 220 S
0.12 (When the \336le is checked into the cadence lib the attributes are stored as properties,) 126 206 S
0.12 (and the attribute PI does this.) 126 192 S
0.12 (When the \336le is checked out there are 2 possibilities:) 126 166 S
0.12 (1.) 144 140 S
0.12 (The \336le is checked to a unix dir by iDMS. In this case a sub-dir is created in) 162 140 S
-0.52 0.12 (this directory called .iDMS and a shadow lib lives here. This library holds the) 162 126 B
0.12 (unix metadata.) 162 112 S
62.02 108 66.02 284 R
V
FMENDPAGE
%%EndPage: "57" 10
%%Page: "58" 10
612 792 0 FMBEGINPAGE
72 746.06 540 756 R
7 X
0 K
V
0 10 Q
0 X
(iDMS integration guide) 72 749.33 T
72 738 540 738 2 L
7 X
V
0.5 H
2 Z
0 X
N
72 32.76 540 42.7 R
7 X
V
0 X
(4-58) 72 36.03 T
(Intel Confidential) 465.56 36.03 T
540 54 72 54 2 L
7 X
V
0 X
N
72 90 540 720 R
7 X
V
2 12 Q
0 X
0.12 (2.) 144 712 S
0.12 (The \336el is checked out to a cadence de\336ned area. This by default is the) 162 712 S
-0.14 0.12 (co@user area. Projects may de\336ne a custom mapping function which checks) 162 698 B
-0.6 0.12 (\336les out to some other area. Whichever the case iDMS puts a new property on) 162 684 B
0.12 (the previous checked in version called the iDMSNewV) 162 670 S
0.12 (ersionProp. This) 431.59 670 S
-0.14 0.12 (property will hold all attributes for the newly checked out version. When the) 162 656 B
0.12 (version is checked in iDMS correctly copies the attributes from) 162 642 S
0.12 (iDMSNewV) 162 628 S
0.12 (ersionProp.) 222.26 628 S
6 18 Q
(\340) 126 596 T
2 12 Q
-0.52 0.12 (T) 147.6 596 B
-0.52 0.12 (o dif) 154.21 596 B
-0.52 0.12 (ferentiate between the above two cases - the user must set the environment) 176.39 596 B
0.12 (variable) 147.6 582 S
4 F
0.12 (IDMS_MAPPINGKEYWORD) 190.31 582 S
2 F
0.12 ( to the string which will tell iDMS) 351.82 582 S
0.12 (whether a given \336lepath is in the Cadence area. By default this is set to) 147.6 568 S
0.12 (\322co@\323since that is the default path to a Cadence \336le) 147.6 554 S
62.02 550 66.02 720 R
V
FMENDPAGE
%%EndPage: "58" 11
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 10 1
%%DocumentFonts: Helvetica-Oblique
%%+ Helvetica-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Times-Bold
%%+ Courier
%%+ ZapfDingbats
