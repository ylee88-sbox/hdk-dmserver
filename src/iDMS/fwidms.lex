%{

/* Cleaned by Sorin */

/* Generated by yacc for token definition */

#include <dmspath.tab.h>

/* Global variables used by the parser */

#include <dmsC_new_vars.h>

/* Sorin added this here for the Stack pointer trace experiment */

int maxsp = 0;
extern int *yyps;

int crtno = 0;

void setsp();

#ifdef SETSP
#   undef SETSP
#endif
#ifndef IDMS_DEBUG
#   define SETSP
#else
#   define SETSP setsp();
#endif

#ifdef OH_MACH_LINUX
#ifndef __cplusplus
static int input YY_PROTO(( void ));
int yyinput YY_PROTO(( void )) {
  input();
};
#endif
#endif
%}

%%
"\\"[ \t]*"\n"[ \t]*	{dmsLineNumber++;}
[ \t:]*[:][ \t:]*	return(COLUMN);
[ \t]+ 			return(SPACE);
[#][^\n]*		return(COMMENT1);
[\n] 			{dmsLineNumber++; return(CR);}
[=] 			return(EQUAL);
"$include" 		return(INCLUDE);
"^$"			return(APPEND);		
"<append>"		return(APPEND);		
"<workdir>"		return(WD);		
[$]			return(DOLLAR);
[(] 			return(LB1);
[{] 			return(LB2);
[)] 			return(RB1);
[}] 			return(RB2);
[|] 			return(VER);
[%] 			return(PERCENT);
[/]			return(SLASH);
[.]			return(DOT);
"libpath" 		return(LIBPATH);
"rwpaths" 		return(RWPATHS);
"worklib" 		return(WORKLIB);
"workdir" 		return(WORKDIR);
"tconfig" 		return(TCONFIG);
"RW" 			{dmsIsOn=1; return(RW);}
"RO"			{dmsIsOn=1; return(RO);}
[~A-Za-z_0-9*-][A-Za-z_0-9*-]*	return(STRING);
.                       {return(UNKNOWN);}

%%

void setsp()
{
#if 0 
   int i;

   if (yyps >= yys){
      crtno = ((long)yyps - (long)yys)/sizeof(int)+2;
#if 0 
      for (i = crtno; i >= 0; i--)
         printf("(%d)", yys[i]);
      printf("\n");
#endif
   }
   maxsp = MAX(maxsp, crtno);
#if 0
   printf(" [%d/%d]\n", crtno, maxsp);
#endif
#endif
}

